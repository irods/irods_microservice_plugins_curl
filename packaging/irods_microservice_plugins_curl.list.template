# =-=-=-=-=-=-=-
# EPM Variables
# =-=-=-=-=-=-=-
%product iRODS CURL Microservice Plugins
%copyright 2016, The University of North Carolina at Chapel Hill
%vendor Renaissance Computing Institute <info@irods-consortium.org>
%license LICENSE
%readme README
%description The integrated Rule-Oriented Data System
%version TEMPLATE_PLUGINVERSION TEMPLATE_PLUGINVERSIONINT

%if DEB
%requires libc6
%requires libcurl3
%endif

%if RPM
%requires curl-devel
%endif

%if ARCH
%else
%endif

%format all

# =-=-=-=-=-=-=-
# Install variables
# =-=-=-=-=-=-=-
$IRODS_HOME_DIR=/var/lib/irods
$OS_IRODS_ACCT=irods


# =-=-=-=-=-=-=-
# preinstall
# =-=-=-=-=-=-=-
%preinstall << END_PREINSTALL
REQUIRED_VERSION="4.1.12"
DETECTED_VERSION=`python -c 'import json; print json.loads(open("/var/lib/irods/VERSION.json").read())["irods_version"]'`
if [ "$$DETECTED_VERSION" != "$$REQUIRED_VERSION" ] ; then
    echo "Local iRODS is $$DETECTED_VERSION"
    echo "This plugin requires iRODS $$REQUIRED_VERSION"
    exit 1
fi
END_PREINSTALL


# =-=-=-=-=-=-=-
# post install
# =-=-=-=-=-=-=-
%postinstall << END_POSTINSTALL
. /etc/irods/service_account.config 2> /dev/null
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlGetObj.r
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlGetStr.r
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlDelete.r
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlPost.r
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlPut.r
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlGetObj.so
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlGetStr.so
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlDelete.so
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlPost.so
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlPut.so
chown $$IRODS_SERVICE_ACCOUNT_NAME:$$IRODS_SERVICE_GROUP_NAME ${IRODS_HOME_DIR}/tests/pydevtest/test_irods_microservice_plugins_curl.py
END_POSTINSTALL

# =-=-=-=-=-=-=-
# preremove
# =-=-=-=-=-=-=-
%preremove << END_PREREMOVE
END_PREREMOVE

# =-=-=-=-=-=-=-
# post remove
# =-=-=-=-=-=-=-
%postremove << END_POSTREMOVE

# determine whether this is an upgrade
if [ "$$1" -eq "$$1" ] 2>/dev/null ; then
  # integer, therefore rpm
  if [ $$1 -gt 0 ] ; then
    PACKAGEUPGRADE="true"
  else
    PACKAGEUPGRADE="false"
  fi
else
  # string, therefore deb
  if [ "$$1" = "upgrade" ] ; then
    PACKAGEUPGRADE="true"
  else
    PACKAGEUPGRADE="false"
  fi
fi

if [ "$$PACKAGEUPGRADE" = "true" ] ; then
   echo "NOP" > /dev/null
else
   echo "NOP" > /dev/null
fi

END_POSTREMOVE

# =-=-=-=-=-=-=-
# Full File Listing
# =-=-=-=-=-=-=-
f 644 root root ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlGetObj.r rules/curlGetObj.r
f 644 root root ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlGetStr.r rules/curlGetStr.r
f 644 root root ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlDelete.r rules/curlDelete.r
f 644 root root ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlPost.r rules/curlPost.r
f 644 root root ${IRODS_HOME_DIR}/iRODS/clients/icommands/test/rules3.0/curlPut.r rules/curlPut.r
f 644 root root ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlGetObj.so microservices/msiCurlGetObj/libmsiCurlGetObj.so
f 644 root root ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlGetStr.so microservices/msiCurlGetStr/libmsiCurlGetStr.so
f 644 root root ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlDelete.so microservices/msiCurlDelete/libmsiCurlDelete.so
f 644 root root ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlPost.so microservices/msiCurlPost/libmsiCurlPost.so
f 644 root root ${IRODS_HOME_DIR}/plugins/microservices/libmsiCurlPut.so microservices/msiCurlPut/libmsiCurlPut.so
f 644 root root ${IRODS_HOME_DIR}/tests/pydevtest/test_irods_microservice_plugins_curl.py packaging/test_irods_microservice_plugins_curl.py
